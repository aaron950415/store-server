{"version":3,"sources":["pages/Register.js"],"names":["Wraper","styled","div","Title","h1","layout","labelCol","span","wrapperCol","tailLayout","offset","Component","AuthStore","useStores","history","useHistory","name","onFinish","values","setUsername","username","setPassword","password","register","then","push","onFinishFailed","errorInfo","console","log","Item","label","rules","required","message","validator","rule","value","test","Promise","reject","length","resolve","min","max","Password","getFieldValue","type","htmlType"],"mappings":"gMAMMA,EAASC,IAAOC,IAAV,iKAQNC,EAAQF,IAAOG,GAAV,2EAKLC,EAAS,CACbC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,KAGJE,EAAa,CACjBD,WAAY,CACVE,OAAQ,EACRH,KAAM,KA4GKI,UAxGG,WAChB,IAAQC,EAAcC,cAAdD,UACFE,EAAUC,cA+BhB,OACE,eAACf,EAAD,WACE,cAACG,EAAD,uBACA,eAAC,IAAD,2BACME,GADN,IAEEW,KAAK,QACLC,SAnCW,SAACC,GAChBN,EAAUO,YAAYD,EAAOE,UAC7BR,EAAUS,YAAYH,EAAOI,UAC7BV,EAAUW,WACPC,MAAK,WACJV,EAAQW,KAAK,SA+BbC,eA1BiB,SAACC,GACtBC,QAAQC,IAAI,UAAWF,IAqBrB,UAME,cAAC,IAAKG,KAAN,CACEC,MAAM,WACNf,KAAK,WACLgB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,+BAEX,CACEC,UAjCa,SAACC,EAAMC,GAC9B,MAAI,KAAKC,KAAKD,GACLE,QAAQC,OAAO,wCACpBH,EAAMI,OAAS,GAAKJ,EAAMI,OAAS,GAC9BF,QAAQC,OAAO,iCACjBD,QAAQG,aAmBX,SAaE,cAAC,IAAD,MAGF,cAAC,IAAKZ,KAAN,CACEC,MAAM,WACNf,KAAK,WACLgB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,+BAEX,CACES,IAAK,EACLT,QAAS,wBAEX,CACEU,IAAK,GACLV,QAAS,8BAdf,SAkBE,cAAC,IAAMW,SAAP,MAGF,cAAC,IAAKf,KAAN,CACEC,MAAM,mBACNf,KAAK,kBACLgB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,+BA3DG,SAAC,GAAD,IAAGY,EAAH,EAAGA,cAAH,MAAwB,CAC9CX,UAD8C,SACpCC,EAAMC,GACd,OAAIS,EAAc,cAAgBT,EAAcE,QAAQG,UACjDH,QAAQC,OAAO,6BAkDpB,SAYE,cAAC,IAAMK,SAAP,MAGF,cAAC,IAAKf,KAAN,2BAAerB,GAAf,aACE,cAAC,IAAD,CAAQsC,KAAK,UAAUC,SAAS,SAAhC","file":"static/js/14.74bce6b9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport { useStores } from \"../stores\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Wraper = styled.div`\r\n  max-width: 600px;\r\n  margin: 30px auto;\r\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.2);\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 6,\r\n  },\r\n  wrapperCol: {\r\n    span: 18,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 6,\r\n    span: 18,\r\n  },\r\n};\r\n\r\nconst Component = () => {\r\n  const { AuthStore } = useStores();\r\n  const history = useHistory();\r\n\r\n  const onFinish = (values) => {\r\n    AuthStore.setUsername(values.username);\r\n    AuthStore.setPassword(values.password);\r\n    AuthStore.register()\r\n      .then(() => {\r\n        history.push(\"/\");\r\n      })\r\n      \r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const validateUsername = (rule, value) => {\r\n    if (/\\W/.test(value))\r\n      return Promise.reject(\"Can only be alphanumeric underscores\");\r\n    if (value.length < 4 || value.length > 10)\r\n      return Promise.reject(\"The length is 4-10 characters\");\r\n    return Promise.resolve();\r\n  };\r\n\r\n  const passwordConfirm = ({ getFieldValue }) => ({\r\n    validator(rule, value) {\r\n      if (getFieldValue(\"password\") === value) return Promise.resolve();\r\n      return Promise.reject(\"password do not match\");\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Wraper>\r\n      <Title>Register</Title>\r\n      <Form\r\n        {...layout}\r\n        name=\"basic\"\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label=\"username\"\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your username!\",\r\n            },\r\n            {\r\n              validator: validateUsername,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"password\"\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your password!\",\r\n            },\r\n            {\r\n              min: 4,\r\n              message: \"at least 4 character\",\r\n            },\r\n            {\r\n              max: 10,\r\n              message: \"no more than 10 character\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Password confirm\"\r\n          name=\"passwordConfirm\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your password!\",\r\n            },\r\n\r\n            passwordConfirm,\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            SUBMIT\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Wraper>\r\n  );\r\n};\r\n\r\nexport default Component;\r\n"],"sourceRoot":""}